local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()

-- Windows

local Window =
    Rayfield:CreateWindow(
    {
        Name = "ðŸ’µ Resource Saver Hub ðŸ’µ | By Stinkiplier",
        LoadingTitle = "ðŸ’µ Resource Saver Hub ðŸ’µ",
        LoadingSubtitle = "by Stinkiplier",
        ConfigurationSaving = {
            Enabled = false,
            FolderName = nil, -- Create a custom folder for your hub/game
            FileName = "Big Hub"
        },
        Discord = {
            Enabled = false,
            Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
            RememberJoins = true -- Set this to false to make them join the discord every time they load it up
        },
        KeySystem = false, -- Set this to true to use our key system
        KeySettings = {
            Title = "Hoomp Hub | Key",
            Subtitle = "",
            Note = "https://pastebin.com/raw/SHzuKEzD",
            FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
            SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
            GrabKeyFromSite = true, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
            Key = {"https://pastebin.com/raw/SHzuKEzD"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
        }
    }
)
-- Tabs

local HomeTab = Window:CreateTab("ðŸ“Ÿ Home", nil) -- Title, Image

--Console


local numLines = 100

local Button = HomeTab:CreateButton({
    Name = "Clear Console",
    Callback = function()
        for _ = 1, numLines do
            print()
        end
    end,
})

-- FPS

local Slider =
    HomeTab:CreateSlider(
    {
        Name = "FPS Cap",
        Range = {1, 120},
        Increment = 1,
        Suffix = "FPS",
        CurrentValue = 60,
        Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
        Callback = function(Value1)
            setfpscap(Value1)
            print(Value1 .. " FPS Cap")
            -- The variable (Value) is a number which correlates to the value the slider is currently at
        end
    }
)

-- CPU Saver

local Toggle =
    HomeTab:CreateToggle(
    {
        Name = "Cpu Saver",
        CurrentValue = true,
        Flag = "Toggle1",
        Callback = function(Value2)
            game:GetService("RunService"):Set3dRenderingEnabled(Value2)
            if Value2 then
                print("CPU Saver Off")
            else
                print("CPU Saver On")
            end
        end
    }
)

local Button = HomeTab:CreateButton({
    Name = "Kick Player",
    Callback = function()
        game.Players.LocalPlayer:Kick("Kicked by " .. game.Players.LocalPlayer.DisplayName)
    end,
 })

 local Label = HomeTab:CreateLabel("Messages")

 local Text = ""

local Input = HomeTab:CreateInput({
    Name = "Message Text",
    PlaceholderText = "Text",
    RemoveTextAfterFocusLost = false,
    Callback = function(inputText)
        Text = inputText
    end
})

local Button = HomeTab:CreateButton({
    Name = "Say Message",
    Callback = function()
        local message = Text
        game:GetService("Chat"):Chat(game.Players.LocalPlayer.Character, message)
        print("Message sent | " .. Text)
    end,
})
